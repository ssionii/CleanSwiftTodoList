//
//  TodoListPresenter.swift
//  TodoList
//
//  Created by 60058232 on 2021/01/20.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TodoListPresentationLogic
{
	func presentTodos(response: TodoList.FetchTodos.Response)
	func updateTodo(response: TodoList.CheckTodo.Response)
	func presentTodayDate(response: TodoList.FetchTodayDate.Response)
}

class TodoListPresenter: TodoListPresentationLogic
{
	weak var viewController: TodoListDisplayLogic?

	let dateFormatter : DateFormatter = {

		let dateFormatter = DateFormatter()
		dateFormatter.locale = Locale(identifier: "ko_KR")
		dateFormatter.dateFormat = "YYYY/M/d h:mm"
		return dateFormatter
	}()

	let todayDateFormatter : DateFormatter = {

		let dateFormatter = DateFormatter()
		dateFormatter.locale = Locale(identifier: "ko_KR")
		dateFormatter.dateFormat = "M월 d일"
		return dateFormatter
	}()

	// MARK: - Fetch todos

	func presentTodos(response: TodoList.FetchTodos.Response)
	{
		var displayedTodos : [TodoList.FetchTodos.ViewModel.DisplayedTodo] = []

		for todo in response.todos {
			let date = dateFormatter.string(from: todo.creationDate!)

			let displayedTodo = TodoList.FetchTodos.ViewModel.DisplayedTodo(id: Int(todo.id), title: todo.title ?? "제목이 없습니다.", isDone: todo.isDone, creationDate: date)

			displayedTodos.append(displayedTodo)
		}

		let viewModel = TodoList.FetchTodos.ViewModel(displayedTodos: displayedTodos)
		viewController?.displayTodoList(viewModel: viewModel)
	}

	func updateTodo(response: TodoList.CheckTodo.Response)
	{
		let viewModel = TodoList.CheckTodo.ViewModel(row: response.row, todo: response.todo)
		viewController?.displayUpdatedTodoList(viewModel: viewModel)
	}


	func presentTodayDate(response: TodoList.FetchTodayDate.Response)
	{
		let displayedDate = todayDateFormatter.string(from: response.date)

		let viewModel = TodoList.FetchTodayDate.ViewModel(todayString: displayedDate)
		viewController?.displayTodayDate(viewModel: viewModel)
	}

}
