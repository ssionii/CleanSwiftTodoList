//
//  TodoListInteractor.swift
//  TodoList
//
//  Created by 60058232 on 2021/01/20.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TodoListBusinessLogic
{
  	func fetchTodos(request: TodoList.FetchTodos.Request)
	func checkTodo(request: TodoList.CheckTodo.Request)
}

protocol TodoListDataStore
{
	var todos: [Todo]? { get set }
}

class TodoListInteractor: TodoListBusinessLogic, TodoListDataStore
{

  	var presenter: TodoListPresentationLogic?
  	var todosWorker = TodosWorker(todosStore: TodoStore())

	var todos: [Todo]?
  
  	// MARK: Do something
  
  	func fetchTodos(request: TodoList.FetchTodos.Request)
  	{
		todosWorker.fetchTodos { (todos) -> Void in
			self.todos = todos
			let response = TodoList.FetchTodos.Response(todos: todos)
			self.presenter?.presentTodos(response: response)
		}
	}


	func checkTodo(request: TodoList.CheckTodo.Request)
    {
        todosWorker.checkTodo(todoIdToCheck: request.id, todoRowToCheck: request.row) { (row, todo) -> Void in

			let response = TodoList.CheckTodo.Response(row: row, todo: todo!)
			self.presenter?.updateTodo(response: response)
		}
	}
}
